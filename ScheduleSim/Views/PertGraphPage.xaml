<Page x:Class="ScheduleSim.Views.PertGraphPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:i="http://schemas.microsoft.com/winfx/2006/xaml" 
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ScheduleSim.Views"
      xmlns:Controls="clr-namespace:WPFExtensions.Controls;assembly=WPFExtensions" 
      xmlns:vm="clr-namespace:ScheduleSim.ViewModels" 
      xmlns:GraphViz="clr-namespace:Graphviz4Net.Graphs;assembly=Graphviz4Net"
      xmlns:WPF="clr-namespace:Graphviz4Net.WPF;assembly=Graphviz4Net.WPF" 
      xmlns:ViewModels="clr-namespace:Graphviz4Net.WPF.ViewModels;assembly=Graphviz4Net.WPF" 
      xmlns:System="clr-namespace:System;assembly=mscorlib"
      mc:Ignorable="d" 
      d:DesignHeight="300" d:DesignWidth="600"
      Title="PertGraphPage">
    <Page.Resources>
        <DataTemplate DataType="{x:Type vm:PertGraphPageNodeViewModel}">
            <Border BorderBrush="Black" BorderThickness="1" Padding="0" CornerRadius="{Binding Path=ActualWidth, ElementName=Node}" Background="White" Height="{Binding Path=ActualWidth, ElementName=Node}">
                <Border.Style>
                    <Style>
                        <Style.Triggers>
                            <Trigger Property="Border.IsMouseOver" Value="True">
                                <Setter Property="Border.Effect">
                                    <Setter.Value>
                                        <DropShadowEffect BlurRadius="2" Color="#BBBBBB" 
		                                                    Opacity="0.3" Direction="315"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <StackPanel Orientation="Horizontal" Name="Node" MinWidth="32" MinHeight="32">
                    <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Stretch">
                        <TextBlock Text="{Binding Name}" TextAlignment="Center" VerticalAlignment="Center" MinWidth="32" />
                    </StackPanel>
                </StackPanel>
            </Border>
        </DataTemplate>

        <!--<DataTemplate DataType="{x:Type vm:DiamondArrow}">
            <Canvas Width="6" Height="11">
                <Polygon Points="3,0 6,5 3,10 0,5" Stroke="Black" StrokeThickness="1" Fill="Black"/>
            </Canvas>
        </DataTemplate>-->

        <DataTemplate DataType="{x:Type vm:Arrow}">
            <Path Data="M 0,0 L 10,0 L 5,5 L 0,0" Stroke="{Binding Path=Color}" StrokeThickness="1" Fill="{Binding Path=Color}">
            </Path>
        </DataTemplate>

        <!-- Set UseContentPresenterForAllElements of GraphLayout to true -->
        <DataTemplate DataType="{x:Type ViewModels:EdgeLabelViewModel}">
            <StackPanel>
                <TextBlock Text="{Binding Path=Label}" FontFamily="Comic Sans MS"/>
            </StackPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type ViewModels:BorderViewModel}">
            <Border BorderBrush="Green"
                    BorderThickness="2"
                    CornerRadius="10"
                    Padding="10, 0, 0, 0">
                <TextBlock Text="{Binding Path=Label}" FontStyle="Italic"/>
            </Border>
        </DataTemplate>

        <DataTemplate DataType="{x:Type ViewModels:EdgeArrowLabelViewModel}">
            <TextBlock Text="{Binding Path=Label}" Background="White"/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type ViewModels:EdgeViewModel}">
            <Path Data="{Binding Data}" Stroke="{Binding Edge.Attributes[Color]}" StrokeDashArray="{Binding Edge.Attributes[StrokeDashArray]}" StrokeThickness="{Binding Edge.Attributes[Thickness]}" ToolTip="{Binding Edge.Label}"/>
        </DataTemplate>

        <ObjectDataProvider x:Key="dataFromLayoutEngineEnum" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="GraphViz:LayoutEngine"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Page.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--<StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="0" Background="#EEEEEE" Margin="0, 0, 0, 15">
            <StackPanel Margin="50, 10, 10, 10">
                <TextBlock FontSize="14" Margin="0, 0, 0 , 10">Add a new vertex:</TextBlock>
                <TextBox Text="{Binding NewPersonName}" Width="150" Margin="0, 0, 0, 10"/>
                <Button x:Name="AddNewPerson">Add new person</Button>

                <TextBlock FontSize="14" Margin="0, 0, 0 , 0">Choose layout engine:</TextBlock>
                <ComboBox ItemsSource="{Binding Source={StaticResource dataFromLayoutEngineEnum}}"
                  SelectedItem="{Binding Path=LayoutEngine}"/>
            </StackPanel>

            <StackPanel Margin="50, 10, 10, 10">
                <TextBlock FontSize="14" Margin="0, 0, 0 , 10">Add a new edge:</TextBlock>
                <StackPanel Orientation="Horizontal" Margin="0, 0, 0, 10">
                    <ComboBox x:Name="NewEdgeStart" ItemsSource="{Binding PersonNames}" Margin="0, 0, 10, 0" Width="100"/>
                    <ComboBox x:Name="NewEdgeEnd" ItemsSource="{Binding PersonNames}" Width="100"/>
                </StackPanel>
                <Grid Margin="0, 0, 0, 10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Row="0" Grid.Column="0">Label:</Label>
                    <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding NewEdgeLabel}"></TextBox>
                </Grid>
                <Button x:Name="AddNewEdge">Add new link</Button>
            </StackPanel>

            <StackPanel Margin="75, 10, 0, 10" Width="200">
                <TextBlock FontSize="14" Margin="0, 0, 0 , 10">Update a person:</TextBlock>
                <ComboBox x:Name="UpdatePersonName" ItemsSource="{Binding PersonNames}" Margin="0, 0, 0 , 10"/>
                <Grid Margin="0, 0, 0, 10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Row="0" Grid.Column="0">New name:</Label>
                    <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding UpdatePersonNewName}"></TextBox>
                </Grid>
                <Button Margin="0, 0, 0, 10" x:Name="UpdatePerson">Update</Button>
            </StackPanel>
        </StackPanel>-->
        <Controls:ZoomControl Grid.Column="0" Grid.Row="0" FlowDirection="RightToLeft">
            <WPF:GraphLayout
                FlowDirection="LeftToRight"
                DotExecutablePath="GraphViz"
                UseContentPresenterForAllElements="True"
                LogGraphvizOutput="True"
                Graph="{Binding Graph}"
                Engine="{Binding LayoutEngine}"
                x:Name="GraphLayout">
                <WPF:GraphLayout.Resources>
                    <Style TargetType="ProgressBar">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ProgressBar">
                                    <TextBlock Foreground="Black">Generating the layout...</TextBlock>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </WPF:GraphLayout.Resources>
            </WPF:GraphLayout>
        </Controls:ZoomControl>
        <StackPanel Grid.Column="0" Grid.Row="0" FlowDirection="LeftToRight" HorizontalAlignment="Left">
            <Button Width="80" Content="再描画" Command="{Binding RefreshCommand}" CommandParameter="{Binding}"></Button>
        </StackPanel>
    </Grid>
</Page>
