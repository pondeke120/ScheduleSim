<Page x:Class="ScheduleSim.Views.PertPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ScheduleSim.Views"
      xmlns:vm="clr-namespace:ScheduleSim.ViewModels"
      xmlns:converter="clr-namespace:ScheduleSim.ControlConverters"
      xmlns:behavior="clr-namespace:ScheduleSim.ControlBehaviors"
      xmlns:resources="clr-namespace:ScheduleSim.Resources"
      xmlns:custom="clr-namespace:ScheduleSim.CustomControls"
      xmlns:system="clr-namespace:System;assembly=mscorlib"
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
      mc:Ignorable="d" 
      d:DesignHeight="300" d:DesignWidth="600"
      Title="PertPage">
    <Page.Resources>
        <converter:IndexConverter x:Key="IndexConverter"/>
        <converter:PertPageTaskNameConverter x:Key="TaskNameConverter"/>
        <converter:PertPageCriticalFlagConverter x:Key="CriticalFlagConverter"/>
        <converter:MarginConverter x:Key="MarginConverter"/>
        <CollectionViewSource x:Key="ProcessSource" Source="{Binding ProcessSource}"/>
        <CollectionViewSource x:Key="FunctionSource" Source="{Binding FunctionSource}"/>
        <CollectionViewSource x:Key="TaskSource" Source="{Binding TaskSource}"/>
    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid Width="Auto" Height="Auto"
            Grid.RowSpan="2"
            Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="2*"/>
            </Grid.RowDefinitions>
            <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                <i:Interaction.Behaviors>
                    <behavior:ScrollSyncronizingBehavior ScrollGroup="PertScrollGroup" Orientation="Horizontal" />
                </i:Interaction.Behaviors>
                <Grid Grid.Row="0" Margin="2,1,1,0" Background="{Binding Source={x:Static resources:CustomColors.LightGreen}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding ElementName=dataGrid, Path=RowHeaderActualWidth}" />
                        <ColumnDefinition Width="{Binding ElementName=INode, Path=ActualWidth}" />
                        <ColumnDefinition Width="{Binding ElementName=JNode, Path=ActualWidth}" />
                        <ColumnDefinition Width="{Binding ElementName=ProcessId, Path=ActualWidth}" />
                        <ColumnDefinition Width="{Binding ElementName=FunctionId, Path=ActualWidth}" />
                        <ColumnDefinition Width="{Binding ElementName=TaskId, Path=ActualWidth}" />
                        <ColumnDefinition Width="{Binding ElementName=PV, Path=ActualWidth}" />
                        <ColumnDefinition Width="{Binding ElementName=FastestStartValue, Path=ActualWidth}" />
                        <ColumnDefinition Width="{Binding ElementName=LatestStartValue, Path=ActualWidth}" />
                        <ColumnDefinition Width="{Binding ElementName=FastestEndValue, Path=ActualWidth}" />
                        <ColumnDefinition Width="{Binding ElementName=LatestEndValue, Path=ActualWidth}" />
                        <ColumnDefinition Width="{Binding ElementName=TotalFloat, Path=ActualWidth}" />
                        <ColumnDefinition Width="{Binding ElementName=FreeFloat, Path=ActualWidth}" />
                        <ColumnDefinition Width="{Binding ElementName=IsCritical, Path=ActualWidth}" />
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="18"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0" BorderBrush="Black" HorizontalAlignment="Stretch" BorderThickness="0,0,1,0" Background="WhiteSmoke"/>
                    <Border Grid.Column="1" BorderBrush="Black" HorizontalAlignment="Stretch" BorderThickness="0,1,1,0" Background="{Binding Source={x:Static resources:CustomColors.LightGreen}}"/>
                    <Border Grid.Column="2" BorderBrush="Black" HorizontalAlignment="Stretch" BorderThickness="0,1,1,0" Background="{Binding Source={x:Static resources:CustomColors.LightGreen}}"/>
                    <Border Grid.Column="3" BorderBrush="Black" HorizontalAlignment="Stretch" BorderThickness="0,1,1,0" Background="{Binding Source={x:Static resources:CustomColors.LightGreen}}"/>
                    <Border Grid.Column="4" BorderBrush="Black" HorizontalAlignment="Stretch" BorderThickness="0,1,1,0" Background="{Binding Source={x:Static resources:CustomColors.LightGreen}}"/>
                    <Border Grid.Column="5" BorderBrush="Black" HorizontalAlignment="Stretch" BorderThickness="0,1,1,0" Background="{Binding Source={x:Static resources:CustomColors.LightGreen}}"/>
                    <Border Grid.Column="6" BorderBrush="Black" HorizontalAlignment="Stretch" BorderThickness="0,1,1,0" Background="{Binding Source={x:Static resources:CustomColors.LightGreen}}"/>
                    <Border Grid.Column="7" Grid.ColumnSpan="2" BorderBrush="Black" HorizontalAlignment="Stretch" BorderThickness="0,1,1,1" Background="{Binding Source={x:Static resources:CustomColors.LightGreen}}">
                        <Label HorizontalContentAlignment="Center">開始</Label>
                    </Border>
                    <Border Grid.Column="9" Grid.ColumnSpan="2" BorderBrush="Black" HorizontalAlignment="Stretch" BorderThickness="0,1,1,1" Background="{Binding Source={x:Static resources:CustomColors.LightGreen}}">
                        <Label HorizontalContentAlignment="Center">終了</Label>
                    </Border>
                    <Border Grid.Column="11" Grid.ColumnSpan="2" BorderBrush="Black" HorizontalAlignment="Stretch" BorderThickness="0,1,1,1" Background="{Binding Source={x:Static resources:CustomColors.LightGreen}}">
                        <Label HorizontalContentAlignment="Center">FLOAT</Label>
                    </Border>
                    <Border Grid.Column="13" BorderBrush="Black" HorizontalAlignment="Stretch" BorderThickness="0,1,1,0" Background="{Binding Source={x:Static resources:CustomColors.LightGreen}}"/>
                    <Border Grid.Column="14" BorderBrush="Black" HorizontalAlignment="Stretch" BorderThickness="0,1,0,0" Background="{Binding Source={x:Static resources:CustomColors.LightGreen}}"/>
                    <Border Grid.Column="15" BorderBrush="Black" HorizontalAlignment="Stretch" BorderThickness="0,1,1,0" Background="{Binding Source={x:Static resources:CustomColors.LightGreen}}"/>
                </Grid>
            </ScrollViewer>
            <DataGrid x:Name="dataGrid" 
                          AutoGenerateColumns="False" 
                          RowHeight="24" ItemsSource="{Binding Edges}" 
                          CanUserDeleteRows="True" 
                          Grid.Row="1" 
                          Margin="1,-0.5,1,1" 
                          BorderThickness="1,0,1,1"
                          CanUserReorderColumns="False"
                          AddingNewItem="dataGrid_AddingNewItem"
                          ScrollViewer.CanContentScroll="True">
                <behavior:PushBindingManager.PushBindings>
                    <behavior:PushBinding TargetProperty="SelectedItems" Path="SelectedEdges"/>
                </behavior:PushBindingManager.PushBindings>
                <i:Interaction.Behaviors>
                    <behavior:ScrollSyncronizingBehavior ScrollGroup="PertScrollGroup" Orientation="Horizontal" />
                </i:Interaction.Behaviors>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader">
                        <Style.Setters>
                            <Setter Property="Height" Value="24"/>
                            <Setter Property="VerticalContentAlignment" Value="Bottom"/>
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="BorderBrush" Value="Black"/>
                            <Setter Property="BorderThickness" Value="0,0,1,1"/>
                            <Setter Property="Background" Value="{Binding Source={x:Static resources:CustomColors.LightGreen}}"/>
                        </Style.Setters>
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.RowHeaderStyle>
                    <Style TargetType="DataGridRowHeader">
                        <Setter Property="BorderBrush" Value="Black"/>
                        <Setter Property="BorderThickness" Value="1,0,0,0"/>
                    </Style>
                </DataGrid.RowHeaderStyle>
                <DataGrid.Resources>
                    <behavior:ContextMenuBindingProxy x:Key="ContextMenuBindingProxy" Data="{Binding Path=DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Page}}}"/>
                    <ContextMenu x:Key="DataGridContextMenu">
                        <MenuItem Header="Insert Row" 
                                      Command="{Binding Source={StaticResource ContextMenuBindingProxy}, Path=Data.InsertEdgeCommand}"
                                      CommandParameter="{Binding Source={StaticResource ContextMenuBindingProxy}, Path=Data.SelectedEdges}"
                                      />
                        <MenuItem Header="Delete Row" 
                                      Command="{Binding Source={StaticResource ContextMenuBindingProxy}, Path=Data.DeleteEdgeCommand}"
                                      CommandParameter="{Binding Source={StaticResource ContextMenuBindingProxy}, Path=Data.SelectedEdges}"
                                      />
                    </ContextMenu>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="ContextMenu" Value="{Binding Source={StaticResource DataGridContextMenu}}"/>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn x:Name="INode" Header="i" Width="40" Binding="{Binding INode}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                <Setter Property="Background" Value="{Binding Source={x:Static resources:CustomColors.Cream}}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},
                                           Path=IsSelected}" Value="True">
                                        <Setter Property="Background" Value="DodgerBlue"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},
                                           Path=IsSelected}" Value="False">
                                        <Setter Property="Background" Value="{Binding Source={x:Static resources:CustomColors.Cream}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox">
                                <EventSetter Event="TextChanged" Handler="INode_TextChanged"/>
                            </Style>
                        </DataGridTextColumn.EditingElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn x:Name="JNode" Header="j" Width="40" Binding="{Binding JNode}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                <Setter Property="Background" Value="{Binding Source={x:Static resources:CustomColors.Cream}}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},
                                           Path=IsSelected}" Value="True">
                                        <Setter Property="Background" Value="DodgerBlue"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},
                                           Path=IsSelected}" Value="False">
                                        <Setter Property="Background" Value="{Binding Source={x:Static resources:CustomColors.Cream}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox">
                                <EventSetter Event="TextChanged" Handler="JNode_TextChanged"/>
                            </Style>
                        </DataGridTextColumn.EditingElementStyle>
                    </DataGridTextColumn>
                    <DataGridComboBoxColumn
                            x:Name="ProcessId"
                            Header="工程" Width="80"
                            SelectedValuePath="ProcessId"
                            DisplayMemberPath="ProcessName"
                            ItemsSource="{Binding Source={StaticResource ProcessSource}}"
                            SelectedValueBinding="{Binding ProcessId}">
                        <DataGridComboBoxColumn.EditingElementStyle>
                            <Style TargetType="{x:Type ComboBox}">
                                <EventSetter Event="SelectionChanged" Handler="Process_SelectionChanged" />
                            </Style>
                        </DataGridComboBoxColumn.EditingElementStyle>
                        <DataGridComboBoxColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                <Setter Property="Background" Value="{Binding Source={x:Static resources:CustomColors.Cream}}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},
                                           Path=IsSelected}" Value="True">
                                        <Setter Property="Background" Value="DodgerBlue"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},
                                           Path=IsSelected}" Value="False">
                                        <Setter Property="Background" Value="{Binding Source={x:Static resources:CustomColors.Cream}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridComboBoxColumn.CellStyle>
                    </DataGridComboBoxColumn>
                    <DataGridComboBoxColumn
                            x:Name="FunctionId"
                            Header="機能" Width="80"
                            SelectedValuePath="FunctionId"
                            DisplayMemberPath="FunctionName"
                            ItemsSource="{Binding Source={StaticResource FunctionSource}}"
                            SelectedValueBinding="{Binding FunctionId}">
                        <DataGridComboBoxColumn.EditingElementStyle>
                            <Style TargetType="{x:Type ComboBox}">
                                <EventSetter Event="SelectionChanged" Handler="Function_SelectionChanged" />
                            </Style>
                        </DataGridComboBoxColumn.EditingElementStyle>
                        <DataGridComboBoxColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                <Setter Property="Background" Value="{Binding Source={x:Static resources:CustomColors.Cream}}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},
                                           Path=IsSelected}" Value="True">
                                        <Setter Property="Background" Value="DodgerBlue"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},
                                           Path=IsSelected}" Value="False">
                                        <Setter Property="Background" Value="{Binding Source={x:Static resources:CustomColors.Cream}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridComboBoxColumn.CellStyle>
                    </DataGridComboBoxColumn>
                    <custom:CustomDataGridTemplateColumn        
                            x:Name="TaskId"
                            Header="作業" Width="80">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding TaskId, Converter={StaticResource TaskNameConverter}, ConverterParameter={StaticResource TaskSource}}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <ComboBox
                                        SelectedValue="{Binding TaskId}"
                                        DisplayMemberPath="TaskName"
                                        SelectedValuePath="TaskId"
                                        ItemsSource="{Binding Source={StaticResource TaskSource}}"
                                        SelectionChanged="Task_SelectionChanged"
                                        DropDownOpened="Task_DropDownOpened"
                                        IsSynchronizedWithCurrentItem="False"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                        <DataGridTemplateColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                <Setter Property="Background" Value="{Binding Source={x:Static resources:CustomColors.Cream}}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},
                                           Path=IsSelected}" Value="True">
                                        <Setter Property="Background" Value="DodgerBlue"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},
                                           Path=IsSelected}" Value="False">
                                        <Setter Property="Background" Value="{Binding Source={x:Static resources:CustomColors.Cream}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTemplateColumn.CellStyle>
                    </custom:CustomDataGridTemplateColumn>
                    <DataGridTextColumn x:Name="PV" Header="PV" Width="40" Binding="{Binding PV, StringFormat={}{0:N1}}" IsReadOnly="True"/>
                    <DataGridTextColumn x:Name="FastestStartValue" Header="最早" Width="40" Binding="{Binding FastestStartValue, StringFormat={}{0:N1}}" IsReadOnly="True"/>
                    <DataGridTextColumn x:Name="LatestStartValue" Header="最遅" Width="40" Binding="{Binding LatestStartValue, StringFormat={}{0:N1}}" IsReadOnly="True"/>
                    <DataGridTextColumn x:Name="FastestEndValue" Header="最早" Width="40" Binding="{Binding FastestEndValue, StringFormat={}{0:N1}}" IsReadOnly="True"/>
                    <DataGridTextColumn x:Name="LatestEndValue" Header="最遅" Width="40" Binding="{Binding LatestEndValue, StringFormat={}{0:N1}}" IsReadOnly="True"/>
                    <DataGridTextColumn x:Name="TotalFloat" Header="TF" Width="40" Binding="{Binding TotalFloat, StringFormat={}{0:N1}}" IsReadOnly="True"/>
                    <DataGridTextColumn x:Name="FreeFloat" Header="FF" Width="40" Binding="{Binding FreeFloat, StringFormat={}{0:N1}}" IsReadOnly="True"/>
                    <DataGridTextColumn x:Name="IsCritical" Header="CR" Width="40" Binding="{Binding IsCritical, Converter={StaticResource CriticalFlagConverter}}" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="TextAlignment" Value="Center" />
                                <Setter Property="Foreground" Value="Red"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <ToolBarPanel
            Width="auto"
            Height="auto">
            <ToolBar ToolBarTray.IsLocked="True" HorizontalAlignment="Left" Margin="0,0,-12,0" Loaded="ToolBar_Loaded">
                <Button Content="再計算" Command="{Binding UpdateCalcValuesCommand}" CommandParameter="{Binding}" ToolBar.OverflowMode="Never" ToolTip="再計算を行う"/>
                <Button Content="WBS" Command="{Binding ImportFromWbsCommand}" ToolBar.OverflowMode="Never" ToolTip="WBSのタスク一覧を取り込む"/>
            </ToolBar>
        </ToolBarPanel>
    </Grid>
</Page>
